name: Update Changelog

on:
  push:
    branches:
      - yx  # 推送到 yx 分支时触发

jobs:
  changelog:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # 检出你的代码

      - name: Set up Node.js environment
        uses: actions/setup-node@v3  # 设置 Node.js 环境
        with:
          node-version: '18'  # 指定 Node.js 版本

      - name: Install dependencies
        run: |
          npm install auto-changelog --global  # 全局安装 auto-changelog

      - name: Generate changelog
        run: |
          # 生成新的 changelog 到临时文件
          auto-changelog -p --output temp_changelog.md
          # 保留当前 CHANGELOG.md 中最新的条目并将其余部分移动到 temp_changelog.md
          head -n 20 CHANGELOG.md > latest_changelog.md  # 保留前 20 行（或根据需要修改行数）
          echo "" > CHANGELOG.md  # 清空 CHANGELOG.md 文件
          cat temp_changelog.md >> CHANGELOG.md  # 将新的 changelog 追加到 CHANGELOG.md
          cat latest_changelog.md >> CHANGELOG.md  # 将旧的内容添加到 CHANGELOG.md

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"  # 配置 Git 用户名
          git config --global user.email "github-actions[bot]@users.noreply.github.com"  # 配置 Git 用户邮箱
          git add CHANGELOG.md  # 添加生成的 changelog 文件
          git commit -m "chore: update changelog" || echo "No changes to commit"  # 提交更改
          git push  # 推送到远程仓库

      - name: Tag and push
        run: |
          # 获取版本号或根据需要自定义标签
          VERSION=$(date +'%Y.%m.%d')  # 生成基于日期的标签
          git tag "v$VERSION"  # 创建新的标签
          git push origin "v$VERSION"  # 推送标签到远程仓库
